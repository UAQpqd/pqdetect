{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"curr",
				"currParentIt"
			],
			[
				"clCreateComman",
				"clCreateCommandQueueWithProperties"
			],
			[
				"clCreateContext",
				"clCreateContextFromType\tCreate An OpenCL Context From Device Type"
			],
			[
				"cl",
				"CL"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/main.cpp",
			"settings":
			{
				"buffer_size": 5842,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Package Control Messages\n========================\n\nPlainTasks\n----------\n\n  Thank you for installing PlainTasks.\n  \n  For quick start you probably would like to go through a short tutorial:\n  Preferences → Package Settings → PlainTasks → Tutorial\n",
			"settings":
			{
				"buffer_size": 247,
				"line_ending": "Unix",
				"name": "Package Control Messages",
				"read_only": true,
				"scratch": true
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 72.0,
		"last_filter": "tasks new",
		"selected_items":
		[
			[
				"tasks new",
				"Tasks: New document"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"Sni",
				"Snippet: if(…)"
			],
			[
				"Packa",
				"Package Control: Install Package"
			]
		],
		"width": 485.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/mijiybola/Documentos/git-DiffEvolution/pqdetect/build/Makefile",
		"/home/mijiybola/Documentos/git-DiffEvolution/pqdetect/build/build.sh",
		"/home/mijiybola/Documentos/git-DiffEvolution/pqdetect/src/CMakeLists.txt",
		"/home/mijiybola/Documentos/git-DiffEvolution/pqdetect/src/SignalObject.h",
		"/home/mijiybola/Documentos/git-DiffEvolution/pqdetect/src/SignalGenerator.h",
		"/home/mijiybola/Documentos/git-DiffEvolution/pqdetect/src/SignalGenerator.cpp",
		"/home/mijiybola/Documentos/git-DiffEvolution/pqdetect/src/main.cpp",
		"/home/mijiybola/Documentos/git-DiffEvolution/pqdetect/src/SignalObject.cpp",
		"/home/mijiybola/Documentos/pqdetect/pqdApp/pqdApp/pqdApp.cpp",
		"/home/mijiybola/.cache/.fr-mw2r2g/DE_Optimizer.cpp",
		"/home/mijiybola/Documentos/DiffEvolution/project/src/SignalObject.h",
		"/home/mijiybola/Documentos/DiffEvolution/project/openCLKernels/program.cl",
		"/home/mijiybola/Descargas/clRNG/clRNG.build/tests/Makefile",
		"/home/mijiybola/Descargas/clRNG/clRNG/src/CMakeLists.txt",
		"/home/mijiybola/Documentos/DiffEvolution/project/openCLKernels/createInitialAgents.cl",
		"/home/mijiybola/Documentos/DiffEvolution/project/build/openClKernels/createInitialAgents.cl",
		"/home/mijiybola/Documentos/DiffEvolution/project/src/createInitialAgents.cl",
		"/home/mijiybola/Documentos/DiffEvolution/project/build/build.sh",
		"/home/mijiybola/Documentos/DiffEvolution/project/CMakeLists.txt"
	],
	"find":
	{
		"height": 40.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"setas",
			"HAMBURGUE",
			"CTest.",
			".c",
			".cpp",
			"clTest",
			"test"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/main.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5842,
						"regions":
						{
						},
						"selection":
						[
							[
								3745,
								3745
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2603.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 247,
						"regions":
						{
						},
						"selection":
						[
							[
								247,
								247
							]
						],
						"settings":
						{
							"auto_indent": false,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_width": 2,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 32.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "diffEvolution.sublime-project",
	"replace":
	{
		"height": 60.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"cmake",
				"~/Documentos/DiffEvolution/project/CMakeLists.txt"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
